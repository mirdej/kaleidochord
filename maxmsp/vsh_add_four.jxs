<jittershader name="vsh_mixer">
	<description>
vk 5 channel alpha mixer
</description>
	<param name="s3" type="float" default="0." />
	<param name="s2" type="float" default="0." />
	<param name="s1" type="float" default="0." />
	<param name="s0" type="float" default="1." />
	<param name="tex0" type="int" default="0" />
	<param name="tex1" type="int" default="1" />
	<param name="tex2" type="int" default="2" />
	<param name="tex3" type="int" default="3" />

	<language name="glsl" version="1.0">
		<bind param="s3" program="fp" />
		<bind param="s2" program="fp" />
		<bind param="s1" program="fp" />
		<bind param="s0" program="fp" />
		<bind param="tex0" program="fp" />
		<bind param="tex1" program="fp" />
		<bind param="tex2" program="fp" />
		<bind param="tex3" program="fp" />
		<program name="vp" type="vertex" source="sh.passthru.xform.vp.glsl" />
		<program name="fp" type="fragment">

<![CDATA[
// define our varying texture coordinates
varying vec2 texcoord0;
varying vec2 texcoord1;
varying vec2 texcoord2;
varying vec2 texcoord3;


// samplers
uniform sampler2DRect tex0;
uniform sampler2DRect tex1;
uniform sampler2DRect tex2;
uniform sampler2DRect tex3;


// blend amount
uniform float s3;
uniform float s2;
uniform float s1;
uniform float s0;

// entry point
void main()
{   
	vec4 input_0 = texture2DRect(tex0, texcoord0);
	vec4 input_1 = texture2DRect(tex1, texcoord1);
	vec4 input_2 = texture2DRect(tex2, texcoord2);
	vec4 input_3 = texture2DRect(tex3, texcoord3);
	vec4 col;
	
	col = 	s0 		* input_3; 
	col += 	s1 		* input_2; 
	col += 	s2 		* input_1; 
	col += 	s3 		* input_0; 

	gl_FragColor = col;

}

]]>
		</program>
	</language>
</jittershader>
